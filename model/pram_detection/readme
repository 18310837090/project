运行我们编写的脚本，生成TFRecord文件
＃from ~/tensorflow/models/research
python object_detection/dataset_tools/create_pascal_tf_record_pram.py \
	--data_dir=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/JPEGImages \
	--set=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/data/train.txt \
	--output_path=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/data/train.record \
	--label_map_path=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/data/pascal_label_map.pbtxt \
	--annotations_dir=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/Annotations


如果报错，没有找到相应模块，则
# From tensorflow/models/research/
export PYTHONPATH=$PYTHONPATH:`pwd`:`pwd`/slim

再重复上面的命令。


接着运行编写的脚本，生成TFRecord文件
python object_detection/dataset_tools/create_pascal_tf_record_pram.py \
	--data_dir=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/JPEGImages \
	--set=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/data/val.txt \
	--output_path=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/data/val.record \
	--label_map_path=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/data/pascal_label_map.pbtxt \
	--annotations_dir=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/Annotations



开始训练的脚本
老版本
python object_detection/legacy/train.py --logtostderr \
    --pipeline_config_path=/home/xiaojing/dataset/raccoon_dataset-master/ssd_mobilenet_v1_raccoon.config \
    --train_dir=/home/xiaojing/dataset/raccoon_dataset-master/train

新版本
python object_detection/model_main.py \
    --pipeline_config_path=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/data/ssd_mobilenet_v1_pram.config \
    --model_dir=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/train \
    --num_train_steps=50000 \
    --num_eval_steps=2000 \
    --alsologtostderr




报错：This call to matplotlib.use() has no effect because the backend has already
been chosen; matplotlib.use() must be called *before* pylab, matplotlib.pyplot,
or matplotlib.backends is imported for the first time.

/home/xiaojing/tensorflow/models/research/object_detection/utils/visualization_utils.py  修改过该文件  注释了import matplotlib; matplotlib.use('Agg')行


用验证集评估训练效果（可选）
xiaojing@xiaojingpc:cd /home/xiaojing/tensorflow/models/research/
python object_detection/eval_util.py \
    --logtostderr \
    --pipeline_config_path=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/data/ssd_mobilenet_v1_pram.config \
    --checkpoint_dir=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/train \
    --eval_dir=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/eval

七、用TensorBoard查看训练进程
(root) xiaojing@xiaojingpc:~$ source activate root
(root) xiaojing@xiaojingpc:~$ tensorboard --logdir=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/


转pb文件
# From ~/tensorflow/models/research
python object_detection/export_inference_graph.py \
  --input_type=image_tensor \
  --pipeline_config_path=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/data/ssd_mobilenet_v1_pram.config \
  --trained_checkpoint_prefix=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/train/model.ckpt-5258 \
  --output_directory=/usr/local/machine_learning/pycharm_workspace/yinerche_detector/pb